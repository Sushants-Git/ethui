/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  BitMix,
  BitMixInterface,
} from "../../../contracts/root.sol/BitMix";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_wbtcTokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_proverContractAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_lightClientAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "orderID",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "pubkey",
        type: "bytes32",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "orderID",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "blockhash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "cipherText",
        type: "bytes",
      },
    ],
    name: "OrderValidated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "pubkey",
        type: "bytes32",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lightClient",
    outputs: [
      {
        internalType: "contract ILightClient",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "orderMap",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "pubkey",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "cipherText",
        type: "bytes",
      },
      {
        internalType: "bool",
        name: "isValidated",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proverContract",
    outputs: [
      {
        internalType: "contract IProverContract",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "orderID",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "proof",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "publicInputs",
        type: "bytes",
      },
    ],
    name: "validate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "wbtcToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60e060405234801561001057600080fd5b50604051610c19380380610c1983398101604081905261002f91610068565b6001600160a01b0392831660805290821660a0521660c0526100ab565b80516001600160a01b038116811461006357600080fd5b919050565b60008060006060848603121561007d57600080fd5b6100868461004c565b92506100946020850161004c565b91506100a26040850161004c565b90509250925092565b60805160a05160c051610b2c6100ed60003960008181610120015261055c01526000818160f901526104b0015260008181608701526102d50152610b2c6000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063b5700e681161005b578063b5700e681461011b578063bef56e5314610142578063c9630cb014610165578063fb59f1651461017a57600080fd5b806327614df8146100825780637ecebe00146100c6578063811b0a03146100f4575b600080fd5b6100a97f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b6100e66100d4366004610671565b60006020819052908152604090205481565b6040519081526020016100bd565b6100a97f000000000000000000000000000000000000000000000000000000000000000081565b6100a97f000000000000000000000000000000000000000000000000000000000000000081565b6101556101503660046106a1565b61018d565b6040516100bd949392919061070a565b61017861017336600461073c565b610242565b005b610178610188366004610823565b610448565b60016020819052600091825260409091208054918101546002820180549192916101b690610890565b80601f01602080910402602001604051908101604052809291908181526020018280546101e290610890565b801561022f5780601f106102045761010080835404028352916020019161022f565b820191906000526020600020905b81548152906001019060200180831161021257829003601f168201915b5050506003909301549192505060ff1684565b3360009081526020819052604081208054908261025e836108ca565b909155506040516bffffffffffffffffffffffff193360601b16602082015260348101859052605481018490526074810182905290915060009060940160408051808303601f190181529082905280516020909101206323b872dd60e01b82523360048301523060248301526044820186905291507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd906064016020604051808303816000875af1158015610326573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061034a91906108f1565b61038d5760405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b60448201526064015b60405180910390fd5b604080516080810182528581526020808201868152835160008082528184018652848601918252606085018190528681526001938490529490942083518155905191810191909155915190919060028201906103e99082610964565b50606091909101516003909101805460ff19169115159190911790556040805185815260208101859052829133917f159f53bcf80158124447d8b9df6f91d441081d247882fce9f252d7ae079309dc910160405180910390a350505050565b6000838152600160205260409020600381015460ff16156104ab5760405162461bcd60e51b815260206004820152601760248201527f4f7264657220616c72656164792076616c6964617465640000000000000000006044820152606401610384565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ea19174386866040518363ffffffff1660e01b81526004016104fc929190610a24565b600060405180830381865afa158015610519573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105419190810190610a52565b604051631a08e46360e21b81526004810183905291935091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690636823918c90602401602060405180830381865afa1580156105ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105cf91906108f1565b61060f5760405162461bcd60e51b8152602060048201526011602482015270092dcecc2d8d2c840c4d8dec6d6d0c2e6d607b1b6044820152606401610384565b6002830161061d8282610964565b5060038301805460ff1916600117905560405186907f065333dd91770186ec057c965fb719875bada6b4f70017a63ffd15eba8362c61906106619085908590610ad5565b60405180910390a2505050505050565b60006020828403121561068357600080fd5b81356001600160a01b038116811461069a57600080fd5b9392505050565b6000602082840312156106b357600080fd5b5035919050565b60005b838110156106d55781810151838201526020016106bd565b50506000910152565b600081518084526106f68160208601602086016106ba565b601f01601f19169290920160200192915050565b84815283602082015260806040820152600061072960808301856106de565b9050821515606083015295945050505050565b6000806040838503121561074f57600080fd5b50508035926020909101359150565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561079d5761079d61075e565b604052919050565b600067ffffffffffffffff8211156107bf576107bf61075e565b50601f01601f191660200190565b600082601f8301126107de57600080fd5b81356107f16107ec826107a5565b610774565b81815284602083860101111561080657600080fd5b816020850160208301376000918101602001919091529392505050565b60008060006060848603121561083857600080fd5b83359250602084013567ffffffffffffffff8082111561085757600080fd5b610863878388016107cd565b9350604086013591508082111561087957600080fd5b50610886868287016107cd565b9150509250925092565b600181811c908216806108a457607f821691505b6020821081036108c457634e487b7160e01b600052602260045260246000fd5b50919050565b6000600182016108ea57634e487b7160e01b600052601160045260246000fd5b5060010190565b60006020828403121561090357600080fd5b8151801515811461069a57600080fd5b601f82111561095f576000816000526020600020601f850160051c8101602086101561093c5750805b601f850160051c820191505b8181101561095b57828155600101610948565b5050505b505050565b815167ffffffffffffffff81111561097e5761097e61075e565b6109928161098c8454610890565b84610913565b602080601f8311600181146109c757600084156109af5750858301515b600019600386901b1c1916600185901b17855561095b565b600085815260208120601f198616915b828110156109f6578886015182559484019460019091019084016109d7565b5085821015610a145787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b604081526000610a3760408301856106de565b8281036020840152610a4981856106de565b95945050505050565b60008060408385031215610a6557600080fd5b82519150602083015167ffffffffffffffff811115610a8357600080fd5b8301601f81018513610a9457600080fd5b8051610aa26107ec826107a5565b818152866020838501011115610ab757600080fd5b610ac88260208301602086016106ba565b8093505050509250929050565b828152604060208201526000610aee60408301846106de565b94935050505056fea26469706673582212209e26083944db4ed5259e608aa2e4c46046b79d7b3a8b04afaeeea6c6de0c65d364736f6c63430008180033";

type BitMixConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BitMixConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BitMix__factory extends ContractFactory {
  constructor(...args: BitMixConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _wbtcTokenAddress: AddressLike,
    _proverContractAddress: AddressLike,
    _lightClientAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _wbtcTokenAddress,
      _proverContractAddress,
      _lightClientAddress,
      overrides || {}
    );
  }
  override deploy(
    _wbtcTokenAddress: AddressLike,
    _proverContractAddress: AddressLike,
    _lightClientAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _wbtcTokenAddress,
      _proverContractAddress,
      _lightClientAddress,
      overrides || {}
    ) as Promise<
      BitMix & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): BitMix__factory {
    return super.connect(runner) as BitMix__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BitMixInterface {
    return new Interface(_abi) as BitMixInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): BitMix {
    return new Contract(address, _abi, runner) as unknown as BitMix;
  }
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BytesLike,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  BitMix,
  BitMixInterface,
} from "../../../contracts/root.sol/BitMix";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddr",
        type: "address",
      },
      {
        internalType: "address",
        name: "_verifierAddr",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_bitmixProgramVKey",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "orderID",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timeLock",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "orderID",
        type: "bytes32",
      },
    ],
    name: "OrderValidated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timeLock",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "pubkey_x",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "pubkey_y",
        type: "bytes32",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "orderMap",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timeLock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "depositedAt",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "pubkey_x",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "pubkey_y",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "pub_a_x",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "pub_a_y",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "pub_c_x",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "pub_c_y",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "cipher",
            type: "bytes",
          },
        ],
        internalType: "struct ScriptInputs",
        name: "scriptInputs",
        type: "tuple",
      },
      {
        internalType: "bool",
        name: "isValidated",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "orderID",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_publicValues",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "_proofBytes",
        type: "bytes",
      },
      {
        internalType: "uint256[1]",
        name: "blockNumbers",
        type: "uint256[1]",
      },
    ],
    name: "validate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "verifier",
    outputs: [
      {
        internalType: "contract BitMixVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "wbtcToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c060405234801561001057600080fd5b5060405161170d38038061170d83398101604081905261002f916100bc565b6001600160a01b0383166080526040518290829061004c90610093565b6001600160a01b0390921682526020820152604001604051809103906000f08015801561007d573d6000803e3d6000fd5b506001600160a01b031660a052506100f8915050565b61081480610ef983390190565b80516001600160a01b03811681146100b757600080fd5b919050565b6000806000606084860312156100d157600080fd5b6100da846100a0565b92506100e8602085016100a0565b9150604084015190509250925092565b60805160a051610dd06101296000396000818160b0015261055d015260008181606c015261028e0152610dd06000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806327614df8146100675780632b7ac3f3146100ab57806359ad018d146100d25780637ecebe00146100e7578063acec586b14610115578063bef56e5314610128575b600080fd5b61008e7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b61008e7f000000000000000000000000000000000000000000000000000000000000000081565b6100e56100e0366004610806565b61014f565b005b6101076100f5366004610838565b60006020819052908152604090205481565b6040519081526020016100a2565b6100e56101233660046108b1565b61048a565b61013b610136366004610941565b6106f8565b6040516100a298979695949392919061097e565b600084116101a45760405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e203000000060448201526064015b60405180910390fd5b600083116101f45760405162461bcd60e51b815260206004820152601f60248201527f74696d654c6f636b206d7573742062652067726561746572207468616e203000604482015260640161019b565b3360009081526020819052604081208054908261021083610a3d565b909155506040516bffffffffffffffffffffffff193360601b1660208201526034810187905260548101859052607481018490526094810182905290915060009060b40160408051808303601f190181529082905280516020909101206323b872dd60e01b82523360048301523060248301526044820188905291507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd906064016020604051808303816000875af11580156102df573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103039190610a56565b6103415760405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b604482015260640161019b565b6040805161010081018252878152602080820188815282840186815243606080860191825260808087018c815260a08089018d81528a519182018b528e82528189018e90526000828c018190528286018190528b51808b018d528181528386015260c08b0192835260e08b018190528c81526001808b52908c90208b5181559851908901559551600288015593516003870155516004860155925160058501559051805160068501908155948101516007850155958601516008840155850151600983015584015192939092909190600a84019061041f9082610b19565b50505060e09190910151600b909101805460ff19169115159190911790556040805183815260208101889052908101869052819033907fd7e4ea769da878204296b09c76ef6942a276da7e6e97d6141f20c5205f8006669060600160405180910390a3505050505050565b6000868152600160205260409020600b81015460ff16156104ed5760405162461bcd60e51b815260206004820152601760248201527f4f7264657220616c72656164792076616c696461746564000000000000000000604482015260640161019b565b43816001015482600301546105029190610bd9565b106105435760405162461bcd60e51b815260206004820152601160248201527013dc99195c881a185cc8195e1c1a5c9959607a1b604482015260640161019b565b60405163387d266960e11b81526000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370fa4cd29061059a908a908a908a908a908a90600401610c1b565b600060405180830381865afa1580156105b7573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105df9190810190610cb1565b80516006840154919250146106295760405162461bcd60e51b815260206004820152601060248201526f092dcecc2d8d2c840e0eac4d6caf2bef60831b604482015260640161019b565b60208101516007830154146106735760405162461bcd60e51b815260206004820152601060248201526f496e76616c6964207075626b65795f7960801b604482015260640161019b565b8051600683019081556020820151600784015560408201516008840155606082015160098401556080820151829190600a8501906106b19082610b19565b505050600b8201805460ff1916600117905560405188907f96452867ebbd5910a58803aff9c274f14d6bcc5e01b8b01ef3282a526cac30b390600090a25050505050505050565b6001602052806000526040600020600091509050806000015490806001015490806002015490806003015490806004015490806005015490806006016040518060a00160405290816000820154815260200160018201548152602001600282015481526020016003820154815260200160048201805461077790610a8e565b80601f01602080910402602001604051908101604052809291908181526020018280546107a390610a8e565b80156107f05780601f106107c5576101008083540402835291602001916107f0565b820191906000526020600020905b8154815290600101906020018083116107d357829003601f168201915b50505091909252505050600b9091015460ff1688565b6000806000806080858703121561081c57600080fd5b5050823594602084013594506040840135936060013592509050565b60006020828403121561084a57600080fd5b81356001600160a01b038116811461086157600080fd5b9392505050565b60008083601f84011261087a57600080fd5b50813567ffffffffffffffff81111561089257600080fd5b6020830191508360208285010111156108aa57600080fd5b9250929050565b600080600080600080608087890312156108ca57600080fd5b86359550602087013567ffffffffffffffff808211156108e957600080fd5b6108f58a838b01610868565b9097509550604089013591508082111561090e57600080fd5b5061091b89828a01610868565b9094509250506080870188101561093157600080fd5b6060870190509295509295509295565b60006020828403121561095357600080fd5b5035919050565b60005b8381101561097557818101518382015260200161095d565b50506000910152565b60006101008a83528960208401528860408401528760608401528660808401528560a08401528060c084015284518184015250602084015161012083015260408401516101408301526060840151610160830152608084015160a06101808401528051806101a08501526101c06109fb828287016020860161095a565b601f91909101601f19168401019150610a1a905060e083018415159052565b9998505050505050505050565b634e487b7160e01b600052601160045260246000fd5b600060018201610a4f57610a4f610a27565b5060010190565b600060208284031215610a6857600080fd5b8151801515811461086157600080fd5b634e487b7160e01b600052604160045260246000fd5b600181811c90821680610aa257607f821691505b602082108103610ac257634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115610b14576000816000526020600020601f850160051c81016020861015610af15750805b601f850160051c820191505b81811015610b1057828155600101610afd565b5050505b505050565b815167ffffffffffffffff811115610b3357610b33610a78565b610b4781610b418454610a8e565b84610ac8565b602080601f831160018114610b7c5760008415610b645750858301515b600019600386901b1c1916600185901b178555610b10565b600085815260208120601f198616915b82811015610bab57888601518255948401946001909101908401610b8c565b5085821015610bc95787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b80820180821115610bec57610bec610a27565b92915050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b606081526000610c2f606083018789610bf2565b8281036020840152610c42818688610bf2565b91505060208360408401379695505050505050565b60405160a0810167ffffffffffffffff81118282101715610c7a57610c7a610a78565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610ca957610ca9610a78565b604052919050565b60006020808385031215610cc457600080fd5b825167ffffffffffffffff80821115610cdc57600080fd5b9084019060a08287031215610cf057600080fd5b610cf8610c57565b8251815283830151848201526040830151604082015260608301516060820152608083015182811115610d2a57600080fd5b80840193505086601f840112610d3f57600080fd5b825182811115610d5157610d51610a78565b610d63601f8201601f19168601610c80565b92508083528785828601011115610d7957600080fd5b610d888186850187870161095a565b5060808101919091529594505050505056fea2646970667358221220271f2b3f118ef933ce2f7e4dcbeb3fd2fa5976f1dde532f1c9fb2261a28773fd64736f6c63430008180033608060405234801561001057600080fd5b5060405161081438038061081483398101604081905261002f91610058565b600080546001600160a01b0319166001600160a01b039390931692909217909155600255610092565b6000806040838503121561006b57600080fd5b82516001600160a01b038116811461008257600080fd5b6020939093015192949293505050565b610773806100a16000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80632b7ac3f3146100515780634fee3eb21461008157806370fa4cd214610098578063ee2e9eb8146100b8575b600080fd5b600054610064906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61008a60025481565b604051908152602001610078565b6100ab6100a63660046103ad565b6100cb565b6040516100789190610432565b600154610064906001600160a01b031681565b6040805160a0810182526000808252602082018190528183018190526060808301829052608083015254600254925163020a49e360e51b815291926001600160a01b03909116916341493c609161012c918a908a908a908a906004016104db565b60006040518083038186803b15801561014457600080fd5b505afa158015610158573d6000803e3d6000fd5b506000925061016c91505086880188610603565b8051516040805160208101929092529192506101a29161019b910160405160208183030381529060405261029d565b6020015190565b6001546040516334cdf78d60e01b8152853560048201526001600160a01b03909116906334cdf78d90602401602060405180830381865afa1580156101eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061020f91906106fd565b146102565760405162461bcd60e51b8152602060048201526013602482015272109b1bd8dac8191bd95cdb9bdd08195e1a5cdd606a1b604482015260640160405180910390fd5b6040518060a00160405280826020015181526020018260400151815260200182606001518152602001826080015181526020018260a0015181525091505095945050505050565b805160609060008167ffffffffffffffff8111156102bd576102bd610514565b6040519080825280601f01601f1916602001820160405280156102e7576020820181803683370190505b50905060005b8281101561035c57848181518110610307576103076106e7565b01602001516001600160f81b0319168260016103238487610716565b61032d9190610716565b8151811061033d5761033d6106e7565b60200101906001600160f81b031916908160001a9053506001016102ed565b509392505050565b60008083601f84011261037657600080fd5b50813567ffffffffffffffff81111561038e57600080fd5b6020830191508360208285010111156103a657600080fd5b9250929050565b6000806000806000606086880312156103c557600080fd5b853567ffffffffffffffff808211156103dd57600080fd5b6103e989838a01610364565b9097509550602088013591508082111561040257600080fd5b5061040f88828901610364565b9094509250506060860187101561042557600080fd5b5092959194509260400190565b6000602080835283516020840152602084015160408401526040840151606084015260608401516080840152608084015160a08085015280518060c086015260005b818110156104905782810184015186820160e001528301610474565b50600060e0828701015260e0601f19601f830116860101935050505092915050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b8581526060602082015260006104f56060830186886104b2565b82810360408401526105088185876104b2565b98975050505050505050565b634e487b7160e01b600052604160045260246000fd5b60405160c0810167ffffffffffffffff8111828210171561054d5761054d610514565b60405290565b6040516020810167ffffffffffffffff8111828210171561054d5761054d610514565b600082601f83011261058757600080fd5b813567ffffffffffffffff808211156105a2576105a2610514565b604051601f8301601f19908116603f011681019082821181831017156105ca576105ca610514565b816040528381528660208588010111156105e357600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000602080838503121561061657600080fd5b823567ffffffffffffffff8082111561062e57600080fd5b9084019060c0828703121561064257600080fd5b61064a61052a565b86601f84011261065957600080fd5b610661610553565b80602085018981111561067357600080fd5b855b8181101561068c5780358452928701928701610675565b508184528035602085015250505060408301356040820152606083013560608201526080830135608082015260a08301359350818411156106cc57600080fd5b6106d887858501610576565b60a08201529695505050505050565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561070f57600080fd5b5051919050565b8181038181111561073757634e487b7160e01b600052601160045260246000fd5b9291505056fea2646970667358221220d84bc6333ac58a55d304d5b72bfe171f1a9d0606c42cb193618fe7767676346f64736f6c63430008180033";

type BitMixConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BitMixConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BitMix__factory extends ContractFactory {
  constructor(...args: BitMixConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _tokenAddr: AddressLike,
    _verifierAddr: AddressLike,
    _bitmixProgramVKey: BytesLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _tokenAddr,
      _verifierAddr,
      _bitmixProgramVKey,
      overrides || {}
    );
  }
  override deploy(
    _tokenAddr: AddressLike,
    _verifierAddr: AddressLike,
    _bitmixProgramVKey: BytesLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _tokenAddr,
      _verifierAddr,
      _bitmixProgramVKey,
      overrides || {}
    ) as Promise<
      BitMix & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): BitMix__factory {
    return super.connect(runner) as BitMix__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BitMixInterface {
    return new Interface(_abi) as BitMixInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): BitMix {
    return new Contract(address, _abi, runner) as unknown as BitMix;
  }
}
